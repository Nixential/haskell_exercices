-- import System.IO

duplicatesInList :: (Eq a) =>  [a] -> Bool
duplicatesInList [] = False
duplicatesInList [_] = False
duplicatesInList (x:xs) = dupHelper x xs
  where dupHelper :: (Eq a) => a -> [a] -> Bool
        dupHelper _ [] = False
        dupHelper y (x:xs)
          | y == x = True
          | otherwise = dupHelper y xs

maxInList :: [Int] -> Int
maxInList [] = error "Empty List does not have a max value"
maxInList [x] = x 
maxInList (x:xs) = maxHelper x xs
  where maxHelper :: Int -> [Int] -> Int
        maxHelper max [y] = if y > max then y else max
        maxHelper max (y:ys) = if y > max then maxHelper y ys else maxHelper max ys 
